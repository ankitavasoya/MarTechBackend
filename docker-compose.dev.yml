version: "3.7"
services:
  redis:
    image: 'redis'
    ports:
      - "6379:6379"
    volumes:
      - db-data:/foo
      - ./src:/app/src
    hostname: redis
  web:
    build:
      context: .
      args: 
        NODE_ENV: development
    ports: 
      - "4000:4000"
    volumes:
      - ./src:/app/src
    # networks:
    #    - benet
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    command: npm run dev


# networks:
#   benet:
#     driver: bridge
volumes:
  db-data:

# services:
#   redis:
#     image: redis
#     networks:
#       - benet
#   db:
#     image: postgres
#     networks:
#       - benet
#     environment:
#       POSTGRES_DB: ${DB_NAME}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       POSTGRES_USER: ${DB_USERNAME}
#   webapp:
#     image: martech-backend
#     ports:
#       - "4000:4000"
#     volumes:
#       - "/data"
#     networks:
#       - benet
#     environment:
#       DB_HOST: ${DB_NAME}
#       REDIS_HOST: redis 
# networks:
#   benet:
services:
  mycron:
    image: mycronjob
    command: ["cron", "-f"]
  webredis:
    image: 'redis'
    ports:
      - "6379:6379"
    volumes:
      - db-data:/foo
      - ./src:/app/src
    hostname: redis
  webcron:
    build:
      context: .
      args:
        NODE_ENV: development
    ports:
      - "4000:4000"
    volumes:
      - ./src:/app/src
    # networks:
    #    - benet
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    command: npm run dev
